#!/usr/bin/env php
<?php
/*!
 * @file
 * OS.js - JavaScript Operating System - update-compression
 *
 * Update the compression (minimize) on scripts, stylesheets etc.
 *
 * Copyright (c) 2011-2012, Anders Evenrud <andersevenrud@gmail.com>
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer. 
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @package OSjs.Utilities
 * @author Anders Evenrud <andersevenrud@gmail.com>
 * @licence Simplified BSD License
 */

define("NODB", true);
require "header.php";

$size_before      = 0;
$size_after       = 0;
$size_result      = 0;
$total_files      = 0;
$total_compressed = 0;
$timestamps       = Array();

// Check for timestamps
if ( file_exists(MINIMIZE_CACHE) ) {
  $timestamps = (Array)json_decode(file_get_contents(MINIMIZE_CACHE));
}

// Loop over resources
if ( $resources = ResourceManager::getAllResources() ) {
  foreach ( $resources as $key => $val ) {
    print sprintf("Updating '%s':\n", $key);

    foreach ( $val as $res ) {
      $name = str_replace(PATH, "", $res);

      // Check timestamp
      $fp = @filemtime($res);
      $changed = true;
      if ( isset($timestamps[$res]) ) {
        $changed = ($timestamps[$res] != $fp);
      }
      $timestamps[$res] = $fp;

      // Minimize if file changed
      if ( $changed ) {
        if ( $r = ResourceManager::MinimizeFile(dirname($res), basename($res)) ) {
          print sprintf("  MINIMIZED: %s\n", $name);
          $size_before += $r['before'];
          $size_after  += $r['after'];

          $total_compressed++;
        }
      } else {
        print sprintf("  SKIPPED:   %s\n", $name);
      }

      $total_files++;
    }
  }
}

// Compute results
if ( $size_before > 0 && $size_after > 0 ) {
  $size_result = ((int) ((($size_before - $size_after) / $size_before) * 100));
}

// Write new timestamps
file_put_contents(MINIMIZE_CACHE, json_encode((Array)$timestamps));

// Display result
print sprintf("\nCompressed %d of %d file(s)\n", $total_compressed, $total_files);
print sprintf("Initial size: %db, Resulted size: %db, %d%% Compression\n\n", $size_before, $size_after, $size_result);

?>
